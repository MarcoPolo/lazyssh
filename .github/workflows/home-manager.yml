name: Home Manager

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  home-manager:
    name: Home Manager
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
        extra_nix_config: |
          experimental-features = nix-command flakes

    - uses: cachix/cachix-action@v8
      with:
        name: lazyssh
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build config
      run: |
        # Prepare the Nix flake with Home Manager configuration.
        mkdir "${HOME}/hm-config"
        cat > "${HOME}/hm-config/flake.nix" << EOF
        {
          inputs.home-manager.url = "github:nix-community/home-manager";
          inputs.lazyssh.url = "${PWD}";
          outputs = { home-manager, lazyssh, ... }: {
            homeManagerConfiguration = home-manager.lib.homeManagerConfiguration {
              system = "x86_64-linux";
              username = "${USER}";
              homeDirectory = "${HOME}";
              configuration = {
                imports = [ lazyssh.homeManagerModule ];
                services.lazyssh.configFile = "${HOME}/lazyssh.hcl";
                home.stateVersion = "20.09";
              };
            };
          };
        }
        EOF

        # Build the Home Manager configuration.
        nix build -v -o "${HOME}/hm-build" \
          "${HOME}/hm-config#homeManagerConfiguration.activationPackage"

    - name: Test service
      run: |
        # Redirect stderr to stdout, because GitHub Actions is bad at
        # preserving order between the two separate streams.
        exec 2>&1

        set -x

        # Prepare LazySSH configuration.
        ssh-keygen -t ed25519 -f "${HOME}/dummy-key" < /dev/null
        cat > "${HOME}/lazyssh.hcl" << EOF
        server {
          host_key = <<DUMMY
        $(<"${HOME}/dummy-key")
        DUMMY
          authorized_key = <<DUMMY
        $(<"${HOME}/dummy-key.pub")
        DUMMY
        }
        EOF

        # Start the user systemd, so Home Manager can start services.
        sudo install -d -m 0700 -o "${USER}" "/run/user/${UID}"
        export XDG_RUNTIME_DIR="/run/user/${UID}"
        sudo systemctl start "user@${UID}.service"

        # Activate the Home Manager config and start LazySSH.
        "${HOME}/hm-build/activate"
        systemctl --user start lazyssh.service

        # Verify LazySSH is running.
        tries=10
        while ! nc -vz 127.0.0.1 7922; do
          if [[ $((--tries)) -eq 0 ]]; then
            echo >&2 'Timed out waiting for LazySSH to start'
            journalctl --user
            exit 1
          fi
          sleep 1
        done
